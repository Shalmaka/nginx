# =========================
# NGINX Ingress Controller Configuration
# This configuration listens on port 443 with SSL and proxies requests to an upstream server.
# =========================

# Upstream server configuration
upstream ingress_upstream {
    server 127.0.0.1:8080; # <-- CUSTOMIZE: Change to your upstream server address
    # You can add more servers here if needed
}

# Main HTTPS proxy server
server {
    listen 443 ssl; # <-- CUSTOMIZE: Change to your desired port if needed
    server_name seu-dominio.com.br; # <-- CUSTOMIZE: Change to your fully qualified domain name (FQDN)

    ssl_certificate /usr/share/nginx/certs/fullchain.pem;  # <-- CUSTOMIZE: Path to your SSL certificate with fullchain
    ssl_certificate_key /usr/share/nginx/certs/privkey.pem; # <-- CUSTOMIZE: Path to your SSL certificate key
    
    # Location for the main HTTPS proxy server
    location / {
        proxy_pass http://ingress_upstream; # <-- CUSTOMIZE: Change it to https://ingress_upstream if using HTTPS on the upstream
        proxy_set_header Host $host; # Use $host for safety
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_cache off;

    }

    # Block access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
    }

    # Ingress controller specific settings
    # Content Security Policy
    add_header Content-Security-Policy $csp_header;

    # Hash sizes for types and proxy headers
    types_hash_max_size             2048;
    types_hash_bucket_size          128;
    proxy_headers_hash_max_size     2048;
    proxy_headers_hash_bucket_size  128;

    # Buffer sizes
    client_header_buffer_size   2k;    # Buffer for client headers
    large_client_header_buffers 8 64k; # Buffers for large headers
    client_body_buffer_size     64k;   # Buffer for client body

    # Connection timeouts and resets
    client_max_body_size        10M;   # Limit upload size
    client_body_timeout         10s;
    client_header_timeout       10s;
    keepalive_timeout           30s;
    send_timeout                10s;
    reset_timedout_connection   on;    # Drop timed out connections

    # Upstream timeouts
    fastcgi_read_timeout        90s;
    proxy_read_timeout          90s;
    uwsgi_read_timeout          90s;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Cache control (no cache by default, adjust for static content if needed)
    add_header Last-Modified $date_gmt always;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0' always;
    if_modified_since off;
    expires off;
    etag off;
}